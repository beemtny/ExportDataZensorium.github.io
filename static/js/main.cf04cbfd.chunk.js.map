{"version":3,"sources":["page/Login.js","service/exportFunction.js","helpers/withAPIPath.js","page/Export.js","index.js"],"names":["Login","props","handleInputChange","e","target","value","name","setState","onLogin","preventDefault","sessionStorage","setItem","state","password","history","push","className","onSubmit","this","type","placeholder","onChange","required","React","Component","exportCSVFile","items","measurement","exportedFilename","moment","format","blob","Blob","navigator","msSaveBlob","link","document","createElement","undefined","download","url","URL","createObjectURL","setAttribute","style","visibility","body","appendChild","click","removeChild","withAPIPath","path","componentDidMount","a","async","getItem","isLogin","now","slice","fromDateTime","toDateTime","onExport","payload","tz","utc","token","isSending","axios","post","headers","authorization","response","exportFunction","data","role","htmlFor","id","max","onClick","ReactDOM","render","exact","component","Export","getElementById"],"mappings":"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","file":"static/js/main.cf04cbfd.chunk.js","sourcesContent":["import React from 'react';\nimport '../style.css';\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            password: ''\n        };\n    }\n\n    handleInputChange = e => {\n        const target = e.target;\n        const value = target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    };\n\n    onLogin = e => {\n        e.preventDefault();\n        sessionStorage.setItem('token', this.state.password);\n        this.props.history.push('/export');\n    };\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"card cardLogin\">\n                    <div className=\"card-body\">\n                        <h1 className=\"card-title title alignCenter\">\n                            Welcome to MineMind Project\n                        </h1>\n                        <h6 className=\"card-subtitle mb-2 text-muted alignCenter\">\n                            Please login\n                        </h6>\n                        <form className=\"form-group\" onSubmit={this.onLogin}>\n                            <input\n                                type=\"password\"\n                                className=\"form-control\"\n                                placeholder=\"Enter password\"\n                                onChange={this.handleInputChange}\n                                name=\"password\"\n                                required\n                            ></input>\n                            <button\n                                className=\"btn btn-light btn-lg btn-block login\"\n                                type=\"submit\"\n                            >\n                                Login\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import moment from 'moment';\n\nconst exportCSVFile = (items, measurement) => {\n    var fileTitle = `${measurement}_${moment().format()}`;\n    var exportedFilename = fileTitle + '.csv' || 'export.csv';\n    var blob = new Blob([items], { type: 'text/csv;charset=utf-8;' });\n    if (navigator.msSaveBlob) {\n        // IE 10+\n        navigator.msSaveBlob(blob, exportedFilename);\n    } else {\n        var link = document.createElement('a');\n        if (link.download !== undefined) {\n            var url = URL.createObjectURL(blob);\n            link.setAttribute('href', url);\n            link.setAttribute('download', exportedFilename);\n            link.style.visibility = 'hidden';\n            document.body.appendChild(link);\n            link.click();\n            document.body.removeChild(link);\n        }\n    }\n};\n\nexport default { exportCSVFile };\n","const withAPIPath = path => {\n    if (process.env.NODE_ENV === 'development') {\n        return 'http://localhost:9001' + path;\n    } else if (process.env.NODE_ENV === 'production') {\n        return 'https://info.minemind.net' + path;\n    }\n};\n\nexport default withAPIPath;\n","import React from 'react';\nimport '../styleExport.css';\nimport axios from 'axios';\nimport exportFunction from '../service/exportFunction';\nimport moment from 'moment-timezone';\nimport withAPIPath from '../helpers/withAPIPath';\n\nexport default class Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            measurement: '',\n            fromDateTime: '',\n            toDateTime: '',\n            isSending: false,\n            isLogin: false\n        };\n    }\n\n    componentDidMount = async () => {\n        if (sessionStorage.getItem('token')) this.setState({ isLogin: true });\n        var now = moment()\n            .format()\n            .slice(0, -9);\n        await this.setState({ fromDateTime: now, toDateTime: now });\n    };\n\n    onLogin = () => {\n        this.props.history.push('/');\n    };\n\n    handleInputChange = async e => {\n        const target = e.target;\n        const value = target.value;\n        const name = target.name;\n\n        await this.setState({\n            [name]: value\n        });\n    };\n\n    onExport = async e => {\n        const { measurement, fromDateTime, toDateTime } = this.state;\n        let response;\n        e.preventDefault();\n        const payload = {\n            fromDateTime: moment\n                .tz(fromDateTime, 'Asia/Bangkok')\n                .utc()\n                .format(),\n            toDateTime: moment\n                .tz(toDateTime, 'Asia/Bangkok')\n                .utc()\n                .format()\n        };\n        const token = sessionStorage.getItem('token');\n        this.setState({ isSending: true });\n        try {\n            response = await axios.post(\n                withAPIPath(\n                    `/zensoriumAPI/exportData/export${measurement}Data`\n                ),\n                payload,\n                { headers: { authorization: `Bearer ${token}` } }\n            );\n            await exportFunction.exportCSVFile(response.data, measurement);\n        } catch (error) {\n            this.setState({ isSending: false });\n        }\n        this.setState({ isSending: false });\n    };\n\n    render() {\n        const { isSending, isLogin } = this.state;\n        return (\n            <div className=\"container\">\n                {isSending ? (\n                    <div className=\"filter\">\n                        <div\n                            className=\"spinner-border text-light\"\n                            role=\"status\"\n                        />\n                        <br />\n                        Loading\n                    </div>\n                ) : null}\n                {!isLogin ? (\n                    <div className=\"filter\">\n                        Please Login...\n                        <button\n                            className=\"btn btn-light mt-3\"\n                            onClick={this.onLogin}\n                        >\n                            Go Back\n                        </button>\n                    </div>\n                ) : (\n                    <div className=\"card\">\n                        <div className=\"card-body\">\n                            <h5 className=\"card-title\">Export</h5>\n                            <h6 className=\"card-subtitle mb-2 text-muted\">\n                                Form for export\n                            </h6>\n                            <hr />\n                            <form\n                                className=\"card-text\"\n                                onSubmit={this.onExport}\n                            >\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"fromDateTime\">\n                                        Start Date & Time\n                                    </label>\n                                    <span className=\"text-muted\">\n                                        {' '}\n                                        (In time zone +07:00)\n                                    </span>\n                                    <input\n                                        id=\"fromDateTime\"\n                                        className=\"form-control\"\n                                        type=\"datetime-local\"\n                                        name=\"fromDateTime\"\n                                        value={this.state.fromDateTime}\n                                        max={this.state.toDateTime}\n                                        required\n                                        onChange={this.handleInputChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"toDateTime\">\n                                        End Date & Time\n                                    </label>\n                                    <span className=\"text-muted\">\n                                        {' '}\n                                        (In time zone +07:00)\n                                    </span>\n                                    <input\n                                        id=\"toDateTime\"\n                                        className=\"form-control\"\n                                        type=\"datetime-local\"\n                                        name=\"toDateTime\"\n                                        required\n                                        value={this.state.toDateTime}\n                                        onChange={this.handleInputChange}\n                                    />\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"Measurement\">\n                                        Measurement Data\n                                    </label>\n                                    <select\n                                        className=\"form-control\"\n                                        id=\"Measurement\"\n                                        name=\"measurement\"\n                                        onChange={this.handleInputChange}\n                                        required\n                                    >\n                                        <option value=\"\"></option>\n                                        <option>Step</option>\n                                        <option>Stress</option>\n                                        <option>Sleep</option>\n                                    </select>\n                                </div>\n                                <button\n                                    type=\"submit\"\n                                    className=\"btn btn-outline-warning btn-lg btn-block\"\n                                >\n                                    Export\n                                </button>\n                            </form>\n                            <div className=\"text-muted pt-2\">\n                                Note: Data is returned in UTC+00:00\n                            </div>\n                        </div>\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Login from \"./page/Login\";\nimport Export from \"./page/Export\";\n\nReactDOM.render(\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={Login} />\n      <Route path=\"/export\" component={Export} />\n    </Switch>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}